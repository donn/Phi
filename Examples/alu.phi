namespace RiscBEE {
    module ALU<width>(
        a: Input[width - 32d1..0],
        b: Input[width - 32d1..0],
        allPurposeSwitch: Input,
        operation: Input[2..0],
        output: Output[width - 32d1..0]
    ) {
        Var[31..0] bits = $log(width);
        Var[31..0] msb = width - 32d1;

        Wire[msb..0] add, and, or, xor, not, slt, shift;
        Wire[msb..0] result;
        Wire[width..0] altA, altB;
        
        add = allPurposeSwitch ? a &- b : a &+ b;
        slt = allPurposeSwitch ? a < b ? 32b1 : 32b0 : a &< b ? 32b1 : 32b0;

        sll = s << b[bits - 32d1..0];
        srl = s >>> b[bits - 32d1..0];
        sra = s >> b[bits - 32d1..0];

        result = mux operation {
            3b11x: shift;
            3b101: slt;
            3b100: ~a;
            3b011: a ^ b;
            3b010: a | b;
            3b001: a & b;
            3b000: add;
        };

        output = result;
    }
}