module register_file(
  clk: @clock Input,
  rst: @reset Input,
  RegWrite: @enable Input,
  write_address: Input[4..0],
  write_data: Input[31..0],
  read_address_1: Input[4..0],
  read_address_2: Input[4..0],
  read_data_1: Output[31..0],
  read_data_2: Output[31..0]
){

  //assume that the register file has 20 rows
  Register [31..0] reg [20];
  for i in 0..19 {
    reg[i] = 32b0;
  }

  //at the posedge of clock or posedge of reset , and if RegWrite is enabled
  reg[write_address].data = write_data;


  read_data_1 = mux read_address_1 == 5b0 (1b1: 32b0, 1b0: reg[read_address_1])
  read_data_2 = mux read_address_2 == 5b0 (1b1: 32b0, 1b0: reg[read_address_2])

}
